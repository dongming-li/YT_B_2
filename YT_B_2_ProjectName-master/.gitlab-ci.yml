image: golang:latest

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is mydomainperso.com, and that your repository is repos/projectname, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/mydomainperso.com/repos/projectname
# Thus, making a symbolic link corrects this.
before_script:
    - mkdir -p /go/src
    - ln -sf /builds /go/src/git.linux.iastate.edu
    - cd /go/src/git.linux.iastate.edu/309Fall2017/YT_B_2_ProjectName/server
    - curl https://glide.sh/get | sh
    - glide update
    - glide install

stages:
    - test
    - build
    - deploy

format:
    stage: test
    only:
    - master
    - server
    - kyle-testing
    cache:
        paths:
            - /builds/309Fall2017/YT_B_2_ProjectName/server/vendor
            - /builds/309Fall2017/YT_B_2_ProjectName/server/glide.lock
    script:
        - go tool vet -composites=false -shadow=true *.go
        - go test -v -cover -race $(go list ./... | grep -v /vendor/)
    coverage: '/coverage: (\d+\.\d+)\%/'

compile:
    stage: build
    only:
    - master
    - server
    - kyle-testing
    script:
        # Better put this in a Makefile
        - env GOOS=linux GOARCH=amd64 go build -v -ldflags "-extldflags '-static' -X main.githash=`git rev-parse HEAD`" -o server-linux-amd64
    cache:
        paths:
            - /builds/309Fall2017/YT_B_2_ProjectName/server/vendor
            - /builds/309Fall2017/YT_B_2_ProjectName/server/glide.lock
    artifacts:
        paths:
            - /builds/309Fall2017/YT_B_2_ProjectName/server/cron.sh
            - /builds/309Fall2017/YT_B_2_ProjectName/server/creds.json
            - /builds/309Fall2017/YT_B_2_ProjectName/server/templates
            - /builds/309Fall2017/YT_B_2_ProjectName/server/server-linux-amd64

deploy:
    stage: deploy
    image: ubuntu:latest
    only:
    - master
    cache:
        paths:
            - /builds/309Fall2017/YT_B_2_ProjectName/server/vendor
            - /builds/309Fall2017/YT_B_2_ProjectName/server/glide.lock
        key: apt-cache
        paths:
            - apt-cache/

    before_script:
        # cache apt
        - export APT_CACHE_DIR=$(pwd)/apt-cache && mkdir -pv $APT_CACHE_DIR
        # update sources
        - apt update -yq &&
          DEBIAN_FRONTEND=noninteractive apt install -yq -o dir::cache::archives="$APT_CACHE_DIR"
          rsync openssh-client
        # switch to directory
        - cd /builds/309Fall2017/YT_B_2_ProjectName/server
        # setup ssh
        - echo "${SSH_PRIVATE_KEY}" > id_rsa
        - chmod 700 id_rsa
        - mkdir "${HOME}/.ssh"
        - echo "${SSH_HOST_KEY}" > "${HOME}/.ssh/known_hosts"
    script:
        - ls
        - rsync --protocol=30 -hrvE --delete
          --include cron.sh
          --include creds.json
          --include upload
          --include asset
          --include asset/\*
          --include templates
          --include templates/\*
          --include templates/css/\*
          --include templates/img/\*
          --include templates/js/\*
          --include server-linux-amd64
          --exclude=\*
          -e 'ssh -i id_rsa' . gitlab-deploy@proj-309-yt-b-2.cs.iastate.edu:/opt/server/
        - ssh -i id_rsa gitlab-deploy@proj-309-yt-b-2.cs.iastate.edu touch /opt/server/new_version
